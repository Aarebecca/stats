name: Weekly Stats
description: 'Generate weekly stats.'
author: Aaron

inputs:
  GITHUB_TOKEN:
    required: true
    description: 'GITHUB_TOKEN'
  SAVE_TO_REPO:
    required: false
    default: true
    description: 'Whether to save the generated report to the repository.'
  ACCESS_TOKEN:
    required: false
    description: 'ACCESS_TOKEN'
  REPORT_BRANCH:
    required: false
    description: 'Branch to push report.'
    default: 'workflows/weekly-stats'

jobs:
  stats:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set Up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Get Env
        id: get_env
        run: |
          echo "::set-output name=owner::$(echo $GITHUB_REPOSITORY | cut -d '/' -f 1)"
          echo "::set-output name=repo::$(echo $GITHUB_REPOSITORY | cut -d '/' -f 2)"
          echo "::set-output name=now::$(date -u +%Y-%m-%d)"

      - name: Run Scripts And Write Markdown
        id: run_result
        env:
          GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
          OWNER: ${{ steps.get_env.outputs.owner }}
          REPO: ${{ steps.get_env.outputs.repo }}
        run: |
          node scripts/stats.js > ${{ steps.get_env.outputs.now }}.md

      - name: Commit And Push
        if: ${{ inputs.SAVE_TO_REPO == 'true' }}
        run: |
          # 获取分支名称或使用默认值
          branch_name=${{ inputs.REPORT_BRANCH }}

          # 提交 Markdown 表格文件
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          if ! git rev-parse --verify "$branch_name" >/dev/null 2>&1; then
            git checkout --orphan "$branch_name"
            git rm -rf .
            git commit --allow-empty -m "Create empty branch"
          else
            git checkout "$branch_name"
          fi

          git add ${{ steps.get_env.outputs.now }}.md
          git commit -m "chore: Weekly stats (${{ steps.get_env.outputs.now }})."
          git push origin "$branch_name"
        env:
          ACCESS_TOKEN: ${{ inputs.ACCESS_TOKEN }}
